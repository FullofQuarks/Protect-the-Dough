---
kind: pipeline
type: docker
name: build

steps:
  - name: install
    image: node:12
    commands:
      - cd $${PREFIX} && npm install
    environment:
      PREFIX: ./Frontend/ProtectTheDough.Web/ClientApp

  - name: linting
    image: node:12
    commands:
      - cd $${PREFIX}
      - npm run lint
    environment:
      PREFIX: ./Frontend/ProtectTheDough.Web/ClientApp

  - name: build
    image: node:12
    commands:
      - cd $${PREFIX}
      - npm --prefix /usr install -g @angular/cli
      - ng --version
      - node -v
      - npm -v
      - npm run build-prod
    environment:
      PREFIX: ./Frontend/ProtectTheDough.Web/ClientApp

trigger:
  branch:
    - master
  event:
    include:
      - push
      - pull_request

---
kind: pipeline
type: exec
name: deploy

platform:
  os: linux
  arch: amd64

steps:
  - name: clean
    commands:
      - rm -rf $${RELEASE}
      - rm -rf $${PREFIX}/ClientApp/dist
    environment:
      PREFIX: ./Frontend/ProtectTheDough.Web
      RELEASE: $${PREFIX}/bin/Release/netcoreapp3.0

  - name: pack
    commands:
      - cd ./Frontend
      - dotnet publish -c Release

  - name: publish
    commands:
      - rm -rf $${WEBPATH}/*
      - cp -r $${RELEASE}/publish $${WEBPATH}/
    environment:
      WEBPATH: /var/www/html/angular
      RELEASE: ./Frontend/ProtectTheDough.Web/bin/Release/netcoreapp3.0

trigger:
  branch:
    - master
  event:
    include:
      - push
    exclude:
      - pull_request

depends_on:
  - build
---
kind: signature
hmac: ab1f3c1942718ff00bc11478af9237fa981f026e3669cfef9c892e16ba776bf8

...
